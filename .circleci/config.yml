---
# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

orbs:
  codecov: codecov/codecov@4.1.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build-and-test:
    docker:
      - image: cimg/rust:1.81.0
        environment:
          # Fail the build if there are warnings
          RUSTFLAGS: "-D warnings"
          CARGO_INCREMENTAL: 0
          # RUSTC_WRAPPER: "sccache"
      - image: cimg/postgres:17.0
        environment:
          POSTGRES_USER: postgres
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Build all targets
          command: cargo build
      - save_cache:
          paths:
            - /home/circleci/.cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Install nextest
          command: |
            curl -LsSf https://get.nexte.st/latest/linux | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin
      - run:
          name: Build and archive tests
          command: |
            cargo nextest archive --workspace --archive-file nextest-archive.tar.zst
      - run:
          name: Run tests
          command: |
            cargo nextest run --no-fail-fast --archive-file nextest-archive.tar.zst
          environment:
            DATABASE_URL: postgresql://postgres@localhost/circle_test

  security:
    docker:
      - image: cimg/rust:1.81.0
        environment:
          # Fail the build if there are warnings
          RUSTFLAGS: "-D warnings"
          CARGO_INCREMENTAL: 0
          # RUSTC_WRAPPER: "sccache"
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Cache permission
          command: |
            sudo chown -R $(whoami):$(id -ng) /home/circleci/.cargo/bin/cargo
      - restore_cache:
          keys:
            - v1-cargo-audit-{{ arch }}
      - run:
          name: Install dependency auditing tool
          command: cargo install cargo-audit
      - save_cache:
          paths:
            - /home/circleci/.cargo/bin/cargo
          key: v1-cargo-audit-{{ arch }}
      - run:
          name: Check for known security issues in dependencies
          command: cargo audit

  format:
    docker:
      - image: cimg/rust:1.81.0
        environment:
          # Fail the build if there are warnings
          RUSTFLAGS: "-D warnings"
          CARGO_INCREMENTAL: 0
          # RUSTC_WRAPPER: "sccache"
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Install formatter
          command: rustup component add rustfmt
      - run:
          name: Formatting
          command: cargo fmt --all -- --check

  lint:
    # Specify the execution environment.
    # You can specify an image from Docker Hub or use one of our convenience
    # images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/rust:1.81.0
        environment:
          # Fail the build if there are warnings
          RUSTFLAGS: "-D warnings"
          CARGO_INCREMENTAL: 0
          # RUSTC_WRAPPER: "sccache"
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Install Clippy
          command: rustup component add clippy
      - run:
          name: Linting
          command: |
            cargo clippy --locked --all-targets -- -D warnings -D dead-code

  doc:
    docker:
      - image: cimg/rust:1.81.0
        environment:
          # Fail the build if there are warnings
          RUSTFLAGS: "-D warnings"
          CARGO_INCREMENTAL: 0
          # RUSTC_WRAPPER: "sccache"
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Install nightly toolchain
          command: rustup install nightly
      - run:
          name: Generating documentation
          command: rustup run nightly cargo doc --no-deps --all-features

  coverage:
    docker:
      - image: cimg/rust:1.81.0
        environment:
          # Fail the build if there are warnings
          RUSTFLAGS: "-D warnings"
          CARGO_INCREMENTAL: 0
          # RUSTC_WRAPPER: "sccache"
      - image: cimg/postgres:17.0
        environment:
          POSTGRES_USER: postgres
    environment:
      DATABASE_URL: postgresql://postgres@localhost/circle_test
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Install nightly toolchain
          command: rustup install nightly
      - run:
          name: Install llvm-tools-preview
          command: |
            rustup component add llvm-tools-preview --toolchain nightly-x86_64-unknown-linux-gnu
      - run:
          name: Install codecov tool
          command: cargo install cargo-llvm-cov
      - run:
          name: Install nextest
          command: |
            curl -LsSf https://get.nexte.st/latest/linux | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin
      - run:
          name: Install sqlx-cli
          command: cargo install sqlx-cli
      - run:
          name: Database setup
          command: |
            sqlx database create
            sqlx migrate run
      - run:
          name: Running code coverage
          command: |
            rustup run nightly cargo llvm-cov nextest --locked --all-features --lcov --output-path lcov.info
      - codecov/upload:
          file: "./lcov.info"
          # token: $CODECOV_TOKEN already default

  shuttle-deploy:
    docker:
      - image: cimg/rust:1.81.0
    steps:
      - checkout
      - run:
          name: Install cargo-binstall
          command: |
            curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
      - run:
          name: Install cargo-shuttle
          command: cargo binstall -y --locked cargo-shuttle
      - run:
          name: Login to Shuttle
          command: cargo shuttle login --api-key $SHUTTLE_API_KEY
      - run:
          name: Deploy to Shuttle
          command: cargo shuttle deploy

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  build-test-sanitize:
    jobs:
      - build-and-test:
          filters:
            tags:
              only: /.*/
      - security:
          filters:
            tags:
              only: /.*/
      - format:
          filters:
            tags:
              only: /.*/
      - lint:
          filters:
            tags:
              only: /.*/
      - doc:
          requires:
            - build-and-test
            - security
            - format
            - lint
          filters:
            branches:
              only: main
      - coverage:
          requires:
            - build-and-test
            - security
            - format
            - lint
          filters:
            tags:
              only: /.*/
# skipping auto deploy for now
# - shuttle-deploy:
#     requires:
#       - doc
#       - coverage
#     filters:
#       branches:
#         only: main
